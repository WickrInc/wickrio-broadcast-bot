{"version":3,"sources":["webpack:///./src/pages/messages/makereport.js"],"names":["Report","id","useContext","MessageContext","report","secGroups","sendReportStatus","useState","page","setPage","size","useEffect","secGroup","find","group","target","name","date","Date","broadcast","when_sent","style","className","message","toLocaleDateString","toLocaleTimeString","display","margin","Math","max","summary","sent","failed","pending","ack","justifyContent","alignContent","alignItems","marginTop","overflow","bgcolor","map","user","idx","status","key","status_message","includes","href","rel","fontSize","fontFamily","letterSpacing","textAlign","color","lineHeight","sent_datetime","read_datetime","length","onClick","getLastReportPage","getNextReportPage"],"mappings":"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","file":"component---src-pages-messages-makereport-js-c36963a2a1442b186cec.js","sourcesContent":["import React, { useState, useContext, useEffect } from \"react\"\nimport { Link } from \"gatsby\"\nimport { MessageContext } from \"../../components/context\"\n\nconst Report = ({ id }) => {\n  const { report, secGroups, sendReportStatus } = useContext(MessageContext)\n  const [page, setPage] = useState(0)\n  const [size, setSize] = useState(25)\n\n\n  useEffect(() => {\n\n    // no way to get accumulated number of records \n    sendReportStatus(id, 0, 25)\n  }, [])\n\n  // const broadcast = sentBroadcasts.find(broadcast => broadcast.message_id === id)\n  const secGroup = secGroups.find(group => group.id === report.target) || { name: 'network' }\n  const date = new Date(report?.broadcast?.when_sent)\n  // console.log({ secGroups, report, date })\n  // console.log(report.broadcast.summary)\n\n  const getNextReportPage = (id, page, size) => {\n    // setPage(page + 1)\n    sendReportStatus(id, page, size)\n  }\n\n  const getLastReportPage = (id, page, size) => {\n    if (page !== 0) {\n      setPage(page - 1)\n      sendReportStatus(id, page, size)\n    }\n  }\n\n  return (\n    <>\n      {report.broadcast ?\n        <>\n          <h3 style={{\n            // marginTop: '40px',\n            // overflow: 'scroll'\n\n          }}\n            className=\"title-report\">{report.broadcast.message}\n          </h3>\n          <p className=\"subtitle-report\">{`Sent on ${date.toLocaleDateString()} at ${date.toLocaleTimeString()} to ${secGroup.name}`}</p>\n          <div style={{\n            display: 'flex',\n            margin: '25px 0'\n\n          }}>\n            <div style={{\n              margin: '0px 15px 0 0'\n            }}>\n              <h2\n                className=\"summaryVal\"\n                style={{ margin: 0 }}>\n                {Math.max(0, report.broadcast.summary.sent - report.broadcast.summary.failed)}\n              </h2>\n              <p className=\"summary\"\n                style={{ margin: 0 }}>\n                received\n              </p>\n            </div>\n            <div style={{\n              margin: '0 15px'\n            }}>\n              <h2 className=\"summaryVal\"\n                style={{ margin: 0 }}>\n                {report.broadcast.summary.pending}\n              </h2>\n              <p className=\"summary\"\n                style={{ margin: 0 }}>\n                pending\n              </p>\n            </div>\n            <div style={{\n              margin: '0 15px'\n            }}>\n              <h2 className=\"summaryVal\"\n                style={{ margin: 0 }}>\n                {report.broadcast.summary.failed}\n              </h2>\n              <p className=\"summary\"\n                style={{ margin: 0 }}>\n                failed\n             </p>\n            </div>\n            <div style={{\n              margin: '0 15px'\n            }}>\n              <h2 className=\"summaryVal\"\n                style={{ margin: 0 }}>\n                {report.broadcast.summary?.ack}\n              </h2>\n              <p className=\"summary\"\n                style={{ margin: 0 }}>\n                acknowledged\n              </p>\n            </div>\n          </div>\n          <div style={{ display: 'flex', justifyContent: 'space-between', alignContent: 'center', alignItems: 'center' }}>\n            <div>\n              <h2 className=\"report-table-title\">Report</h2>\n              <p className=\"subtitle-report\">Lorem Ipsum</p>\n            </div>\n            <button className=\"downloadButton\">Download</button>\n          </div>\n          <section\n            className=\"sentsection\"\n            style={{\n              marginTop: '20px',\n              overflow: 'scroll'\n            }}\n          >\n            <table >\n              <thead bgcolor=\"white\">\n                <tr>\n                  <th className=\"Date\">Status</th>\n                  <th className=\"tlabel\">Name</th>\n                  <th className=\"tlabel\">Message</th>\n                  <th className=\"tlabel\">Sent</th>\n                  <th className=\"tlabel\">Read</th>\n                </tr>\n              </thead>\n              <tbody>\n                {report.broadcast.report?.map((user, idx) => {\n                  if (user.status == 0) { user.status = \"pending\" }\n                  else if (user.status == 1) { user.status = \"sent\" }\n                  else if (user.status == 2) { user.status = \"failed\" }\n                  else if (user.status == 3) { user.status = \"ack\" }\n                  else if (user.status == 4) { user.status = \"ignored\" }\n\n                  return (\n                    <tr key={idx}>\n                      <td>\n                        <p className=\"sentmessagereport\">\n                          {user.status}\n                        </p>\n                      </td>\n                      <td className=\"trowreport\">{user.user}</td>\n                      {user?.status_message?.includes('http') ?\n                        <td className=\"trowreport\">\n                          <a href={user.status_message} rel=\"noopener noreferrer\" target=\"_blank\">\n                            Location\n                          </a>\n                        </td>\n                        :\n                        <td className=\"trowreport\">\n                          {user.status_message}\n                        </td>\n\n                      }\n                      <td className=\"trowreport\"><div>\n                        <p style={{\n                          fontSize: 12,\n                          fontFamily: 'Open Sans',\n                          letterSpacing: '0.41px',\n                          textAlign: 'right',\n                          color: 'var(--text-light)',\n                          lineHeight: 1.33\n                        }}>\n                          {new Date(user.sent_datetime).toLocaleDateString()}\n                        </p>\n\n                        <p style={{\n                          fontSize: 12,\n                          fontFamily: 'Open Sans',\n                          letterSpacing: '0.41px',\n                          textAlign: 'right',\n                          color: 'var(--text-light)',\n                          lineHeight: 1.33\n                        }}>\n                          {new Date(user.sent_datetime).toLocaleTimeString()}\n                        </p>\n                      </div></td>\n                      <td className=\"trowreport\"><div>\n                        <p style={{\n                          fontSize: 12,\n                          fontFamily: 'Open Sans',\n                          letterSpacing: '0.41px',\n                          textAlign: 'right',\n                          color: 'var(--text-light)',\n                          lineHeight: 1.33\n                        }}>\n                          {new Date(user.read_datetime).toLocaleDateString()}\n                        </p>\n\n                        <p style={{\n                          fontSize: 12,\n                          fontFamily: 'Open Sans',\n                          letterSpacing: '0.41px',\n                          textAlign: 'right',\n                          color: 'var(--text-light)',\n                          lineHeight: 1.33\n                        }}>\n                          {new Date(user.read_datetime).toLocaleTimeString()}\n                        </p>\n                      </div></td>\n                    </tr>\n                  )\n                })}\n              </tbody>\n\n            </table>\n            {report.broadcast.report.length > 1 &&\n              <>\n                <p\n                  onClick={() => getLastReportPage(page, size)}\n                >\n                  {'<'}\n                </p>\n                <p>{(page == 0 ? 1 : page) * size - 24}-{(page == 0 ? 1 : page) * size}</p>\n                <p\n                  onClick={() => getNextReportPage(page, size)}\n                >\n                  {'>'}\n                </p>\n              </>\n            }\n          </section>\n        </>\n        : 'loading'\n      }\n\n    </>\n\n  )\n}\n\nexport default Report"],"sourceRoot":""}